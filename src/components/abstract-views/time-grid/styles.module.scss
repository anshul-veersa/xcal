.timeGridLayout {
  display: grid;
  grid-template: auto 1fr / var(--side-bar-width) 1fr;
  height: 100%;
  max-height: var(--max-view-height);
}

.content {
  grid-row: 2 / -1;
  grid-column: 1 / -1;
  overflow-y: auto;
}

.contentLayout {
  position: relative;
  display: grid;
  grid-template-columns: var(--side-bar-width) 1fr;

  .indicators {
    grid-column: 1 / 2;
  }
  .columns {
    grid-column: 2 / 3;
  }
}

.timeIndicators {
  display: grid;
  grid-template-rows: repeat(
    calc(var(--indicators-count) - 1),
    calc(
      var(--slots-count) * var(--slot-height) / (var(--indicators-count) - 1)
    )
  );
  left: 0;
  position: sticky;
  border-right: var(--separator-thickness) solid var(--separator-color);
  background-color: var(--side-bar-background);
  padding: var(--content-breathing-space);

  .indicator {
    display: flex;
    align-items: center;
    height: 0px;

    &:not([data-is-hour]) {
      .indicatorRule {
        background-color: var(--separator-color-secondary);
      }

      .indicatorLabel {
        font-size: 0.8em;
        color: rgba(0, 0, 0, 0.65);
      }
    }
  }

  .indicatorLabel {
    flex-shrink: 0;
    text-align: right;
    margin-right: 16px;
    width: 64%;
    font-size: 0.9em;
  }

  .indicatorRule {
    width: 100%;
    height: var(--separator-thickness);
    background-color: var(--separator-color);
  }
}

.columns {
  display: flex;

  .column {
    padding: var(--content-breathing-space);
    background-color: var(--slot-background);

    flex: 1 1 0;
    min-width: var(--column-min-width);
    display: grid;

    &:not(:last-child) {
      border-right: var(--separator-thickness) solid var(--separator-color);
    }

    .separatorsLayer {
      pointer-events: none;
      grid-row-start: 1;
      grid-column-start: 1;
      display: grid;

      grid-template-rows: repeat(
        calc(var(--indicators-count) - 1),
        calc(
          var(--slots-count) * var(--slot-height) /
            (var(--indicators-count) - 1)
        )
      );
      .separator {
        display: flex;
        align-items: center;
        height: 0px;

        &Rule {
          width: 100%;
          height: var(--separator-thickness);
          background-color: var(--separator-color);
        }

        &:not([data-is-hour]) .separatorRule {
          background-color: var(--separator-color-secondary);
        }
      }
    }

    .slotsLayer,
    .eventsLayer {
      grid-row-start: 1;
      grid-column-start: 1;
      display: grid;
      grid-template-rows: repeat(var(--slots-count), var(--slot-height));
    }

    .eventsLayer {
      padding-right: var(--slot-gutter);
      pointer-events: none;
    }
    .eventTile {
      grid-column-start: 1;
      position: relative;
      margin: var(--tile-gap) 0;
      min-width: var(--tile-min-width);
      pointer-events: all;
    }

    .slotsLayer .slot {
      transition: background-color 0.2s ease-in-out;
      &:hover {
        background-color: var(--slot-hover-background);
      }
    }
  }
}

.cornerContent {
  border-bottom: 1px solid var(--separator-color);
  border-right: 1px solid var(--separator-color);
  height: 100%;
}

.header {
  grid-row: 1 / 2;
  grid-column: 2 / -1;
  background-color: var(--header-background);

  &::-webkit-scrollbar {
    display: none;
  }

  .headerItems {
    display: flex;
  }
  .headerItem {
    flex: 1 1 0;
    min-width: var(--column-min-width);
  }
}

[data-xc-scroll-sync="all"],
[data-xc-scroll-sync="x"] {
  overflow-x: auto;
}

[data-xc-scroll-sync="all"],
[data-xc-scroll-sync="y"] {
  overflow-y: auto;
}
